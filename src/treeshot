#!/bin/sh

selection=0
addBorder=1
borderWidth=4
borderColor="#EDD7BD"
delay=0
execAfter=""

showHelp() {
    echo "  Treeshot - L3af's Mediocre Screenshot Wrapper"
    echo " "
    echo " Examples"
    echo "   treeshot -s -w10 -b\\#FF0000"
    echo "     Screenshot a region and copy to clipboard with a border of 10 pixels colored red."
    echo " "
    echo "   treeshot -sbd2"
    echo "     Screenshot a region after 2 seconds and copy to clipboard without adding a border."
    echo " "
    echo "   treeshot -s > selection.png"
    echo "     Screenshot a region and save to selection.png."
    echo " "
    echo "   treeshot -se\"echo \\\$file\""
    echo "     Screenshot a region and echo the temp file location."
    echo " "
    echo " Args"
    echo "   -h  Show this help menu"
    echo "   -s  Select region to screenshot (fullscreen by default)"
    echo "   -b  Disable border (enabled by default)"
    echo "   -c  Border color (#EDD7BD by default)"
    echo "   -w  Border width (4 by default)"
    echo "   -d  Capture delay in seconds"
    echo "   -e  Execute shell after capturing (Use \$file to access the file)"
    echo " "
}

while getopts ":hsbd:c:w:e:" arg; do
    case $arg in
        h) showHelp; exit;;
        s) selection=1;;
        b) addBorder=0;;
        d) delay="${OPTARG}";;
        c) borderColor="${OPTARG}";;
        w) borderWidth="${OPTARG}";;
        e) execAfter="${OPTARG}";;
    esac
done

if ! [ $delay -eq $delay ] 2> /dev/null; then
    echo "Delay is not set to a valid integer"; exit
fi

if [ $delay -lt 0 ]; then
    echo "Delay cannot be set to less than 0"; exit
fi

# Sleep delay
sleep $delay

ARGS="-window root"
if [ $selection -eq 1 ]; then
    # Select region
    slop=$(slop -f "%g") || exit 1

    # Screenshot and crop to specified region
    ARGS="$ARGS -crop $slop"
fi

# Capture screen
import $ARGS /tmp/.treeshot.png

if [ $addBorder -eq 1 ]; then
    # Add border and shadow
    convert /tmp/.treeshot.png -bordercolor $borderColor -border $borderWidth /tmp/.treeshot.png
fi

file="/tmp/.treeshot.png"
eval $execAfter

# Check if running in terminal
if [ -t ]; then
    # Copy to clipboard
    xclip -selection clipboard -t image/png /tmp/.treeshot.png
else
    # Save to file
    OUTFILE=$(readlink /proc/$$/fd/1)
    cp /tmp/.treeshot.png
fi


# Remove file
rm /tmp/.treeshot.png

